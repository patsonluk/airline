#	Routes
#	This file defines all application routes (Higher priority routes first)
#	~~~~

#	Home	page
GET		/							controllers.Application.index
GET		/test						controllers.Application.test
GET		/chat						controllers.ChatApplication.chatSocket

#Web Socket management
GET		/wsWithActor						controllers.WebsocketApplication.wsWithActor

POST	 /login							  controllers.UserApplication.login
POST	 /logout						  controllers.UserApplication.logout
#GET	 	 /login							  controllers.UserApplication.login
#PUT		 /users							  controllers.UserApplication.putUser
GET      /current-cycle                   controllers.Application.getCurrentCycle()
GET      /lookups                   controllers.Application.getLookups()
GET		 /airports						  controllers.Application.getAirports(count : Int ?= 100)
GET		 /airports/:airportId 		  	  controllers.Application.getAirport(airportId : Int, image : Boolean ?= false)
GET		 /airports/:airportId/images	  	  controllers.Application.getAirportImages(airportId : Int)
#GET		 /airports/:airportId/details  	  controllers.Application.getAirportDetails(airportId : Int)
#GET	 	 /airports/:airportId/slots	      controllers.Application.getAirportSlotsByAirline(airportId : Int, airlineId : Int)
GET	 	 /airports/:airportId/link-statistics	        controllers.Application.getAirportLinkStatistics(airportId : Int)
GET	 	 /airports/:airportId/loyalist-data	        controllers.Application.getAirportLoyalistData(airportId : Int, airlineId: Option[Int])
GET	 	 /airports/:airportId/departures/:dayOfWeek/:hour/:minute controllers.Application.getDepartures(airportId : Int, dayOfWeek : Int, hour : Int, minute : Int)
GET		 /airports/:fromAirportId/to/:toAirportId				controllers.Application.getAirportLinkConsumptions(fromAirportId : Int, toAirportId : Int)
GET		 /airports/:airportId/link-consumptions	controllers.Application.getLinkConsumptionsByAirport(airportId : Int)
GET	 	 /airports/:airportId/projects	      controllers.Application.getAirportProjects(airportId : Int)
PUT	 	 /airports/:airportId/projects	      controllers.Application.addAirportProject(airlineId : Int, airportId : Int)
GET	 	 /airports/:airportId/champions	      controllers.Application.getAirportChampions(airportId : Int)
GET		 /airports/base/scale-details			  controllers.Application.getScaleDetails()

GET		 /cities/:cityId/airportShares	  controllers.Application.getAirportSharesOnCity(cityId: Int)

GET		 /airlines						  controllers.AirlineApplication.getAllAirlines(loginStatus : Boolean ?= false, hideInactive : Boolean ?= false)
GET		 /airlines/:airlineId	  		  controllers.AirlineApplication.getAirline(airlineId : Int, extendedInfo : Boolean ?= false)
GET		 /airlines/:airlineId/airplane-models	  controllers.AirplaneApplication.getAirplaneModelsByAirline(airlineId : Int)
GET		 /airlines/:airlineId/airplanes	  controllers.AirplaneApplication.getOwnedAirplanes(airlineId : Int, simpleResult : Boolean ?= false, groupedResult : Boolean ?= false)
GET		 /airlines/:airlineId/airplanes/model/:modelId	  controllers.AirplaneApplication.getOwnedAirplanesWithModelId(airlineId : Int, modelId : Int)
GET		 /airlines/:airlineId/airplanes/model/:modelId/stats	  controllers.AirplaneApplication.getAirplaneModelStatsByAirline(airlineId : Int, modelId : Int)
GET		 /airlines/:airlineId/airplanes/:airplaneId		controllers.AirplaneApplication.getAirplane(airlineId : Int, airplaneId : Int)
DELETE	 /airlines/:airlineId/airplanes/:airplaneId		controllers.AirplaneApplication.sellAirplane(airlineId : Int, airplaneId : Int)
PUT		 /airlines/:airlineId/airplanes/:airplaneId		controllers.AirplaneApplication.replaceAirplane(airlineId : Int, airplaneId : Int)
PUT	     /airlines/:airlineId/airplanes	  controllers.AirplaneApplication.addAirplane(airlineId : Int, modelId: Int, quantity: Int, homeAirportId : Int, configurationId :Int)
GET	     /airlines/:airlineId/swap-airplanes/:fromAirplaneId/:toAirplaneId	  controllers.AirplaneApplication.swapAirplane(airlineId : Int, fromAirplaneId : Int, toAirplaneId : Int)
GET		 /airlines/:airlineId/links  	  controllers.LinkApplication.getLinks(airlineId : Int, toAirportId : Int = -1)
GET		 /airlines/:airlineId/links-details  	  controllers.LinkApplication.getLinksDetails(airlineId : Int)
PUT 	 /airlines/:airlineId/links 	  controllers.LinkApplication.addLink(airlineId : Int)
POST 	 /airlines/:airlineId/link-overtime-compensation 	  controllers.LinkApplication.getOvertimeCompensation(airlineId : Int)
DELETE   /airlines/:airlineId/links/:linkId 		 	controllers.LinkApplication.deleteLink(airlineId : Int, linkId : Int)
GET		 /airlines/:airlineId/links/:linkId 			controllers.LinkApplication.getLink(airlineId : Int, linkId : Int)
GET		 /airlines/:airlineId/expectedQuality/:fromAirportId/:toAirportId/:queryAirportId	controllers.LinkApplication.getExpectedQuality(airlineId : Int, fromAirportId : Int, toAirportId : Int, queryAirportId : Int)
GET		 /airlines/:airlineId/bases		  controllers.AirlineApplication.getBases(airlineId : Int)
GET		 /airlines/:airlineId/bases/:airportId  		controllers.AirlineApplication.getBase(airlineId : Int, airportId : Int)
DELETE	 /airlines/:airlineId/bases/:airportId  		controllers.AirlineApplication.deleteBase(airlineId : Int, airportId : Int)
PUT	 	 /airlines/:airlineId/bases/:airportId  		controllers.AirlineApplication.putBase(airlineId : Int, airportId : Int)
PUT	 	 /airlines/:airlineId/facilities/:airportId  		controllers.AirlineApplication.putFacility(airlineId : Int, airportId : Int)
POST     /airlines/:airlineId/facility-consideration/:airportId	controllers.AirlineApplication.getFacilityConsideration(airlineId : Int, airportId : Int)
GET	 	 /airlines/:airlineId/facilities/:airportId  		controllers.AirlineApplication.getFacilities(airlineId : Int, airportId : Int)
GET		 /airlines/:airlineId/downgradeBase/:airportId  controllers.AirlineApplication.downgradeBase(airlineId : Int, airportId : Int)
GET      /airlines/:airlineId/bases/:airportId/specialization-info  controllers.AirlineApplication.getBaseSpecializationInfo(airlineId: Int, airportId : Int)
PUT      /airlines/:airlineId/bases/:airportId/specializations  controllers.AirlineApplication.setBaseSpecializations(airlineId: Int, airportId : Int)
GET		 /airlines/:airlineId/link-consumptions/:linkId	  controllers.LinkApplication.getLinkConsumption(airlineId : Int, linkId: Int, cycleCount : Int ?= 1)
#PUT		 /airlines/:airlineId/watched-link 				controllers.LinkApplication.setWatchedLink(airlineId: Int, linkId: Int)
#GET		 /airlines/:airlineId/watched-link 				controllers.LinkApplication.getWatchedLink(airlineId: Int)
#GET		 /airlines/:airlineId/link-history 				controllers.LinkApplication.getLinkHistory(airlineId: Int)
GET		 /airlines/:airlineId/related-link-consumption/:linkId		controllers.LinkApplication.getRelatedLinkConsumption(airlineId: Int, linkId: Int, cycleDelta : Int, selfOnly : Boolean ?= false)
GET		 /airlines/:airlineId/link-composition/:linkId		controllers.LinkApplication.getLinkComposition(airlineId: Int, linkId: Int)
GET		 /airlines/:airlineId/link-rival-history/:linkId		controllers.LinkApplication.getLinkRivalHistory(airlineId: Int, linkId: Int, cycleCount : Int ?= 1)
GET		 /airlines/:airlineId/link-rival-details/:linkId		controllers.LinkApplication.getLinkRivalDetails(airlineId: Int, linkId: Int, cycleCount : Int ?= 1)
PUT		 /airlines/:airlineId/target-service-quality			controllers.LinkApplication.setTargetServiceQuality(airlineId: Int)
GET		 /airlines/:airlineId/service-funding-projection		    controllers.AirlineApplication.getServiceFundingProjection(airlineId: Int)
GET		 /airlines/:airlineId/airplane-renewal			controllers.AirlineApplication.getAirplaneRenewal(airlineId: Int)
PUT		 /airlines/:airlineId/airplane-renewal			controllers.AirlineApplication.updateAirplaneRenewal(airlineId: Int)
PUT		 /airlines/:airlineId/maintenanceQuality			controllers.LinkApplication.updateMaintenanceQuality(airlineId: Int)
POST	 /airlines/:airlineId/plan-link	  controllers.LinkApplication.planLink(airlineId : Int)
POST	 /airlines/:airlineId/get-link-negotiation	  controllers.LinkApplication.getLinkNegotiation(airlineId : Int)
GET	     /airlines/:airlineId/office-capacity	  controllers.AirlineApplication.getOfficeCapacity(airlineId : Int)
GET		 /airlines/:airlineId/finances  controllers.AirlineApplication.getAirlineFinances(airlineId : Int)
GET		 /airlines/:airlineId/loans  controllers.BankApplication.viewLoans(airlineId : Int)
POST	 /airlines/:airlineId/loans  controllers.BankApplication.takeOutLoan(airlineId : Int)
DELETE   /airlines/:airlineId/loans/:loanId	  controllers.BankApplication.repayLoan(airlineId : Int, loanId : Int)
GET		 /airlines/:airlineId/loan-options  controllers.BankApplication.getLoanOptions(airlineId : Int, loanAmount : Long)
GET		 /airlines/:airlineId/max-loan  controllers.BankApplication.getMaxLoan(airlineId : Int)
GET		 /airlines/:airlineId/championed-countries  controllers.AirlineApplication.getChampionedCountries(airlineId : Int)
GET		 /airlines/:airlineId/championed-airports  controllers.AirlineApplication.getChampionedAirports(airlineId : Int)
GET		 /airlines/:airlineId/country-airline-titles  controllers.AirlineApplication.getCountryAirlineTitles(airlineId : Int)
GET		 /airlines/:airlineId/reset-consideration   controllers.AirlineApplication.resetAirlineConsideration(airlineId : Int)
GET		 /airlines/:airlineId/reset	   controllers.AirlineApplication.resetAirline(airlineId : Int, keepAssets : Boolean)
GET		 /airlines/:airlineId/logo	controllers.AirlineApplication.getLogo(airlineId : Int)
GET		 /airlines/:airlineId/set-logo	controllers.AirlineApplication.setLogo(airlineId : Int, templateIndex : Int, color1 : String, color2 : String)
POST	 /airlines/:airlineId/logo	controllers.AirlineApplication.uploadLogo(airlineId : Int)
GET		 /airlines/:airlineId/livery	controllers.AirlineApplication.getLivery(airlineId : Int)
POST	 /airlines/:airlineId/livery	controllers.AirlineApplication.uploadLivery(airlineId : Int)
DELETE	 /airlines/:airlineId/livery	controllers.AirlineApplication.deleteLivery(airlineId : Int)
GET		 /airlines/:airlineId/slogan	controllers.AirlineApplication.getSlogan(airlineId : Int)
PUT	     /airlines/:airlineId/slogan	controllers.AirlineApplication.saveSlogan(airlineId : Int)
PUT		 /airlines/:airlineId/airline-code	   controllers.AirlineApplication.setAirlineCode(airlineId : Int)
GET		 /colors			  controllers.AirlineApplication.getColors()
GET		 /airlines/:airlineId/set-color			  controllers.AirlineApplication.setColor(airlineId : Int, color : String)
GET		 /airlines/:airlineId/alliance-details  controllers.AllianceApplication.getAirlineAllianceDetails(airlineId : Int)
GET      /airlines/:airlineId/fleet			  controllers.AirlineApplication.getFleet(airlineId : Int)
GET		 /alliances  controllers.AllianceApplication.getAlliances(airlineId : Option[Int])
GET		 /alliances/:allianceId/details  controllers.AllianceApplication.getAllAllianceDetails(allianceId : Int)
GET		 /alliances/:allianceId/championed-airports	controllers.AllianceApplication.getAllianceAirportChampions(allianceId : Int)
GET		 /alliances/:allianceId/championed-countries	controllers.AllianceApplication.getAllianceCountryChampions(allianceId : Int)
POST	 /airlines/:airlineId/form-alliance  controllers.AllianceApplication.formAlliance(airlineId : Int)
GET		 /airlines/:airlineId/evaluate-alliance/:allianceId  controllers.AllianceApplication.evaluateAlliance(airlineId : Int, allianceId : Int)
GET		 /airlines/:airlineId/apply-for-alliance/:allianceId  controllers.AllianceApplication.applyForAlliance(airlineId : Int, allianceId : Int)
GET		 /airlines/:airlineId/remove-alliance-member/:targetAirlineId  controllers.AllianceApplication.removeFromAlliance(airlineId : Int, targetAirlineId : Int)
GET		 /airlines/:airlineId/accept-alliance-member/:targetAirlineId  controllers.AllianceApplication.addToAlliance(airlineId : Int, targetAirlineId : Int)
GET		 /airlines/:airlineId/promote-alliance-member/:targetAirlineId  controllers.AllianceApplication.promoteToAllianceLeader(airlineId : Int, targetAirlineId : Int)
GET		 /airlines/:airlineId/used-airplanes/models/:modelId	controllers.AirplaneApplication.getUsedAirplanes(airlineId : Int, modelId : Int)
PUT		 /airlines/:airlineId/used-airplanes/airplanes/:airplaneId	controllers.AirplaneApplication.buyUsedAirplane(airlineId : Int, airplaneId : Int, homeAirportId : Int, configurationId : Int)
PUT		 /airlines/:airlineId/airplanes/:airplaneId/home/:airportId  controllers.AirplaneApplication.updateAirplaneHome(airlineId : Int, airplaneId : Int, airportId: Int)
GET		 /airlines/:airlineId/oil-contracts	controllers.OilApplication.getContracts(airlineId : Int)
GET		 /airlines/:airlineId/oil-details	controllers.OilApplication.getDetails(airlineId : Int)
GET		 /airlines/:airlineId/oil-contract-consideration	controllers.OilApplication.getContractConsideration(airlineId : Int, volume : Int, duration : Int)			
GET		 /airlines/:airlineId/sign-oil-contract	controllers.OilApplication.signContract(airlineId : Int, volume : Int, duration : Int)
DELETE	 /airlines/:airlineId/oil-contracts/:contractId	controllers.OilApplication.terminateContract(airlineId : Int, contractId : Int)
GET	 	 /airlines/:airlineId/oil-inventory-options		controllers.OilApplication.getInventoryOptions(airlineId : Int)
GET		 /airlines/:airlineId/set-oil-inventory-option  controllers.OilApplication.setInventoryOption(airlineId : Int, optionId : Int)
GET		 /airlines/:airlineId/logs  controllers.LogApplication.getLogs(airlineId : Int)
GET		 /airlines/:airlineId/alerts  controllers.AlertApplication.getAlerts(airlineId : Int)
GET		 /airlines/:airlineId/configurations                   controllers.AirplaneConfigurationApplication.getConfigurations(airlineId : Int, modelId : Int)
GET		 /airlines/:airlineId/configurations/:configurationId  controllers.AirplaneConfigurationApplication.getConfiguration(airlineId : Int, configurationId : Int)
PUT		 /airlines/:airlineId/configurations                   controllers.AirplaneConfigurationApplication.putConfiguration(airlineId : Int, modelId : Int, configurationId: Int ?= 0, economy : Int, business : Int, first : Int, isDefault : Boolean)
PUT		 /airlines/:airlineId/airplanes/:airplaneId/configuration/:configurationId  controllers.AirplaneConfigurationApplication.updateAirplaneConfiguration(airlineId : Int, airplaneId : Int, configurationId: Int)
DELETE	 /airlines/:airlineId/configurations/:configurationId  controllers.AirplaneConfigurationApplication.deleteConfiguration(airlineId : Int, configurationId : Int)
GET      /airlines/:airlineId/favorite-model/:modelId    controllers.AirplaneApplication.getFavoriteModelDetails(airlineId : Int, modelId : Int)
PUT      /airlines/:airlineId/favorite-model/:modelId    controllers.AirplaneApplication.setFavoriteModel(airlineId : Int, modelId : Int)
GET		 /airlines/:airlineId/heatmap-data 				controllers.HeatmapApplication.getHeatmapData(airlineId: Int, heatmapType : String, cycleDelta : Int)
GET 	 /airlines/:airlineId/campaigns         controllers.CampaignApplication.getCampaigns(airlineId: Int, fullLoad : Boolean ?= false)
POST 	 /airlines/:airlineId/campaigns         controllers.CampaignApplication.saveCampaign(airlineId: Int)
DELETE 	 /airlines/:airlineId/campaigns/:campaignId         controllers.CampaignApplication.deleteCampaign(airlineId: Int, campaignId : Int)
GET 	 /airlines/:airlineId/campaign-airports/:airportId         controllers.CampaignApplication.getCampaignAirports(airlineId: Int, airportId: Int, radius : Int)


POST      /airlines/:airlineId/completed-tutorial/:tutorialId     controllers.TutorialApplication.saveCompletedTutorial(airlineId: Int, tutorialId: String, category : String)
GET      /airlines/:airlineId/completed-tutorial               controllers.TutorialApplication.getCompletedTutorials(airlineId: Int)
POST      /airlines/:airlineId/tutorial               controllers.TutorialApplication.setSkipTutorial(airlineId : Int, skipTutorial: Boolean)

POST      /airlines/:airlineId/completed-notice/:noticeId     controllers.NoticeApplication.saveCompletedNotice(airlineId: Int, noticeId: String, category : String)

GET      /airlines/:airlineId/airport/:airportId/shuttles     controllers.ShuttleApplication.getShuttles(airlineId: Int, airportId: Int)
POST      /airlines/:airlineId/airport/:airportId/shuttles     controllers.ShuttleApplication.updateShuttles(airlineId: Int, airportId: Int)

GET     /airlines/:airlineId/profiles   controllers.ProfileApplication.getProfiles(airlineId : Int, airportId : Int)
PUT     /airlines/:airlineId/profiles/:profileId     controllers.ProfileApplication.buildHqWithProfile(airlineId : Int, airportId : Int, profileId : Int)

GET     /airlines/:airlineId/headquarters-map       controllers.TileApplication.getHeadquartersTiles(airlineId : Int)

GET     /airlines/:airlineId/preferred-suppliers       controllers.AirplaneApplication.getPreferredSuppliers(airlineId : Int)

GET		 /oil-prices	controllers.OilApplication.getOilPrices()
GET		 /loan-interest-rates	controllers.BankApplication.getLoanInterestRates()

GET		 /countries					  controllers.CountryApplication.getAllCountries(airlineId : Option[Int])
GET		 /countries/:countryCode  		  controllers.CountryApplication.getCountry(countryCode : String)
GET		 /countries/:countryCode/airline/:airlineId  		  controllers.CountryApplication.getCountryAirlineDetails(countryCode : String, airlineId: Int)
GET		 /countries/:countryCode/title-progression  		  controllers.CountryApplication.getCountryAirlineTitleProgression(countryCode : String)

GET      /delegates/airline/:airlineId      controllers.DelegateApplication.getDelegateInfo(airlineId: Int)
GET      /delegates/airline/:airlineId/country/:countryCode      controllers.DelegateApplication.getCountryDelegates(countryCode : String, airlineId: Int)
POST      /delegates/airline/:airlineId/country/:countryCode      controllers.DelegateApplication.updateCountryDelegates(countryCode : String, airlineId: Int)

GET		 /santa-claus/guess/:airportId/:airlineId   controllers.ChristmasApplication.makeGuess(airportId : Int, airlineId : Int)
GET		 /santa-claus/attempt-status/:airportId/:airlineId  controllers.ChristmasApplication.getAttemptStatus(airportId : Int, airlineId : Int)
GET		 /santa-claus/award-options/:airlineId  controllers.ChristmasApplication.getAwardOptions(airlineId : Int)
GET      /santa-claus/pick-award/:airlineId/:optionId   controllers.ChristmasApplication.pickAwardOption(airlineId : Int, optionId : Int)


GET     /search-route/:fromAirportId/:toAirportId controllers.SearchApplication.searchRoute(fromAirportId : Int, toAirportId : Int)
GET     /search-airport  controllers.SearchApplication.searchAirport(input: String ?= "")
GET     /search-country  controllers.SearchApplication.searchCountry(input: String ?= "")
GET     /search-zone  controllers.SearchApplication.searchZone(input: String ?= "")
GET     /search-airline  controllers.SearchApplication.searchAirline(input: String ?= "")
GET     /search-alliance  controllers.SearchApplication.searchAlliance(input: String ?= "")

POST    /search-link-history    controllers.ChangeHistoryApplication.searchLinkHistory()

GET     /research-link/:fromAirportId/:toAirportId  controllers.SearchApplication.researchLink(fromAirportId : Int, toAirportId : Int)

#PUT 	 /test-links 				      controllers.LinkApplication.addTestLink
#GET		 /links							  controllers.LinkApplication.getAllLinks
#GET		 /vip-routes					  controllers.LinkApplication.getVipRoutes
GET		 /link-consumptions				  controllers.LinkApplication.getAllLinkConsumptions	
GET		 /airplane-models				  controllers.AirplaneApplication.getAirplaneModels
GET		 /airplane-models/:modelId/stats     controllers.AirplaneApplication.getAirplaneModelStats(modelId : Int)
GET		 /rankings  		  		      controllers.RankingApplication.getRankings()
GET		 /rankings/:airlineId  		      controllers.RankingApplication.getRankingsWithAirline(airlineId : Int)
GET		 /logos/templates 				  controllers.LogoApplication.getTemplates()	
GET		 /logos/templates/:id			  controllers.LogoApplication.getTemplate(id : Int)
GET		 /logos/preview					  controllers.LogoApplication.getPreview(templateIndex : Int, color1 : String, color2 : String)

GET     /event/olympics             controllers.OlympicsApplication.getAll()
GET     /event/olympics/:eventId             controllers.OlympicsApplication.getOlympicsDetails(eventId : Int)
GET		/event/olympics/:eventId/airlines/:airlineId/votes  controllers.OlympicsApplication.getOlympicsAirlineVotes(airlineId : Int, eventId : Int)
PUT		/event/olympics/:eventId/airlines/:airlineId/votes  controllers.OlympicsApplication.putOlympicsAirlineVotes(airlineId : Int, eventId : Int)
GET		/event/olympics/:eventId/airlines/:airlineId/passenger-details  controllers.OlympicsApplication.getOlympicsAirlinePassengerDetails(airlineId : Int, eventId : Int)
GET		/event/olympics/:eventId/airlines/:airlineId/ranking    controllers.OlympicsApplication.getOlympicsRanking(airlineId : Int, eventId : Int)

PUT     /event/:eventId/airline/:airlineId/reward/category/:categoryId/option/:optionId     controllers.OlympicsApplication.pickOlympicsRewardOption(airlineId : Int, eventId : Int, categoryId : Int, optionId : Int)
GET     /event/:eventId/airline/:airlineId/reward/olympics-vote  controllers.OlympicsApplication.getOlympicsVoteRewardOptions(airlineId : Int, eventId : Int)
GET     /event/:eventId/airline/:airlineId/reward/olympics-passenger  controllers.OlympicsApplication.getOlympicsPassengerRewardOptions(airlineId : Int, eventId : Int)

# Admin
PUT		 /admin-action/:action/:targetUserId		controllers.AdminApplication.adminAction(action : String, targetUserId : Int)
PUT		 /admin/send-airline-message/:targetAirlineId		controllers.AdminApplication.sendAirlineMessage(targetAirlineId : Int)
PUT		 /admin/send-broadcast-message		            controllers.AdminApplication.sendBroadcastMessage()
GET      /admin/invalidate-image/:airportId/:imageType  controllers.AdminApplication.invalidateImage(imageType : String, airportId : Int)
GET      /admin/invalidate-customization/:airlineId  controllers.AdminApplication.invalidateCustomization(airlineId : Int)
GET      /admin/user-ips/:userId   controllers.AdminApplication.getUserIps(userId : Int)


# Signup
GET     /signup                     controllers.SignUp.form
#GET     /editUser/fakeuser             controllers.SignUp.editForm
POST    /signup                     controllers.SignUp.submit

# PasswordReset
GET    /password-reset				controllers.AccountApplication.passwordResetForm(resetToken : String)
POST   /password-reset				controllers.AccountApplication.passwordResetSubmit
GET   /forgot-password				controllers.AccountApplication.forgotPassword
POST   /forgot-password				controllers.AccountApplication.forgotPasswordSubmit
GET   /forgot-id				controllers.AccountApplication.forgotId
POST   /forgot-id				controllers.AccountApplication.forgotIdSubmit

GET     /about      controllers.AboutApplication.about

OPTIONS    /*path     controllers.Application.options(path)

#GET     /favicon.ico    controllers.Assets.at(path="/public/images/icon", file="globe-green.png")
GET  /favicon.ico        controllers.Assets.at(path="/public/images/icons", file="globe-with-airplane.png")

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

#front-end fake links...use redirect instead of telling them not found
GET /nav-*any       controllers.Application.redirect(path : String = "/", any)

